{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "01ad337f",
   "metadata": {},
   "outputs": [],
   "source": [
    "#导入必要的库"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "491ffffc",
   "metadata": {},
   "outputs": [],
   "source": [
    "import opendatasets as od\n",
    "import numpy as np\n",
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "from sklearn.ensemble import RandomForestRegressor\n",
    "from sklearn.linear_model import LinearRegression\n",
    "from sklearn.tree import DecisionTreeRegressor\n",
    "from xgboost import XGBRegressor\n",
    "from sklearn.model_selection import train_test_split, cross_val_score, GridSearchCV\n",
    "from sklearn.svm import SVR\n",
    "from sklearn.neighbors import KNeighborsRegressor\n",
    "from sklearn.metrics import mean_squared_error, mean_absolute_error, r2_score\n",
    "from sklearn.preprocessing import LabelEncoder, OneHotEncoder\n",
    "from sklearn.compose import ColumnTransformer\n",
    "from bayes_opt import BayesianOptimization\n",
    "import shap\n",
    "import warnings\n",
    "\n",
    "warnings.filterwarnings('ignore')\n",
    "plt.rcParams['font.sans-serif'] = ['SimHei']\n",
    "plt.rcParams['axes.unicode_minus'] = False  "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "ddd944e6",
   "metadata": {},
   "outputs": [],
   "source": [
    "#1.数据获取与预处理"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "fc67a2e6",
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Skipping, found downloaded files in \".\\student-habits-and-academic-performance-dataset\" (use force=True to force download)\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>student_id</th>\n",
       "      <th>age</th>\n",
       "      <th>gender</th>\n",
       "      <th>major</th>\n",
       "      <th>study_hours_per_day</th>\n",
       "      <th>social_media_hours</th>\n",
       "      <th>netflix_hours</th>\n",
       "      <th>part_time_job</th>\n",
       "      <th>attendance_percentage</th>\n",
       "      <th>sleep_hours</th>\n",
       "      <th>...</th>\n",
       "      <th>screen_time</th>\n",
       "      <th>study_environment</th>\n",
       "      <th>access_to_tutoring</th>\n",
       "      <th>family_income_range</th>\n",
       "      <th>parental_support_level</th>\n",
       "      <th>motivation_level</th>\n",
       "      <th>exam_anxiety_score</th>\n",
       "      <th>learning_style</th>\n",
       "      <th>time_management_score</th>\n",
       "      <th>exam_score</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>100000</td>\n",
       "      <td>26</td>\n",
       "      <td>Male</td>\n",
       "      <td>Computer Science</td>\n",
       "      <td>7.645367</td>\n",
       "      <td>3.0</td>\n",
       "      <td>0.1</td>\n",
       "      <td>Yes</td>\n",
       "      <td>70.3</td>\n",
       "      <td>6.2</td>\n",
       "      <td>...</td>\n",
       "      <td>10.9</td>\n",
       "      <td>Co-Learning Group</td>\n",
       "      <td>Yes</td>\n",
       "      <td>High</td>\n",
       "      <td>9</td>\n",
       "      <td>7</td>\n",
       "      <td>8</td>\n",
       "      <td>Reading</td>\n",
       "      <td>3.0</td>\n",
       "      <td>100</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>100001</td>\n",
       "      <td>28</td>\n",
       "      <td>Male</td>\n",
       "      <td>Arts</td>\n",
       "      <td>5.700000</td>\n",
       "      <td>0.5</td>\n",
       "      <td>0.4</td>\n",
       "      <td>No</td>\n",
       "      <td>88.4</td>\n",
       "      <td>7.2</td>\n",
       "      <td>...</td>\n",
       "      <td>8.3</td>\n",
       "      <td>Co-Learning Group</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Low</td>\n",
       "      <td>7</td>\n",
       "      <td>2</td>\n",
       "      <td>10</td>\n",
       "      <td>Reading</td>\n",
       "      <td>6.0</td>\n",
       "      <td>99</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>100002</td>\n",
       "      <td>17</td>\n",
       "      <td>Male</td>\n",
       "      <td>Arts</td>\n",
       "      <td>2.400000</td>\n",
       "      <td>4.2</td>\n",
       "      <td>0.7</td>\n",
       "      <td>No</td>\n",
       "      <td>82.1</td>\n",
       "      <td>9.2</td>\n",
       "      <td>...</td>\n",
       "      <td>8.0</td>\n",
       "      <td>Library</td>\n",
       "      <td>Yes</td>\n",
       "      <td>High</td>\n",
       "      <td>3</td>\n",
       "      <td>9</td>\n",
       "      <td>6</td>\n",
       "      <td>Kinesthetic</td>\n",
       "      <td>7.6</td>\n",
       "      <td>98</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>100003</td>\n",
       "      <td>27</td>\n",
       "      <td>Other</td>\n",
       "      <td>Psychology</td>\n",
       "      <td>3.400000</td>\n",
       "      <td>4.6</td>\n",
       "      <td>2.3</td>\n",
       "      <td>Yes</td>\n",
       "      <td>79.3</td>\n",
       "      <td>4.2</td>\n",
       "      <td>...</td>\n",
       "      <td>11.7</td>\n",
       "      <td>Co-Learning Group</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Low</td>\n",
       "      <td>5</td>\n",
       "      <td>3</td>\n",
       "      <td>10</td>\n",
       "      <td>Reading</td>\n",
       "      <td>3.2</td>\n",
       "      <td>100</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>100004</td>\n",
       "      <td>25</td>\n",
       "      <td>Female</td>\n",
       "      <td>Business</td>\n",
       "      <td>4.700000</td>\n",
       "      <td>0.8</td>\n",
       "      <td>2.7</td>\n",
       "      <td>Yes</td>\n",
       "      <td>62.9</td>\n",
       "      <td>6.5</td>\n",
       "      <td>...</td>\n",
       "      <td>9.4</td>\n",
       "      <td>Quiet Room</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Medium</td>\n",
       "      <td>9</td>\n",
       "      <td>1</td>\n",
       "      <td>10</td>\n",
       "      <td>Reading</td>\n",
       "      <td>7.1</td>\n",
       "      <td>98</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 31 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   student_id  age  gender             major  study_hours_per_day  \\\n",
       "0      100000   26    Male  Computer Science             7.645367   \n",
       "1      100001   28    Male              Arts             5.700000   \n",
       "2      100002   17    Male              Arts             2.400000   \n",
       "3      100003   27   Other        Psychology             3.400000   \n",
       "4      100004   25  Female          Business             4.700000   \n",
       "\n",
       "   social_media_hours  netflix_hours part_time_job  attendance_percentage  \\\n",
       "0                 3.0            0.1           Yes                   70.3   \n",
       "1                 0.5            0.4            No                   88.4   \n",
       "2                 4.2            0.7            No                   82.1   \n",
       "3                 4.6            2.3           Yes                   79.3   \n",
       "4                 0.8            2.7           Yes                   62.9   \n",
       "\n",
       "   sleep_hours  ... screen_time  study_environment access_to_tutoring  \\\n",
       "0          6.2  ...        10.9  Co-Learning Group                Yes   \n",
       "1          7.2  ...         8.3  Co-Learning Group                Yes   \n",
       "2          9.2  ...         8.0            Library                Yes   \n",
       "3          4.2  ...        11.7  Co-Learning Group                Yes   \n",
       "4          6.5  ...         9.4         Quiet Room                Yes   \n",
       "\n",
       "  family_income_range  parental_support_level motivation_level  \\\n",
       "0                High                       9                7   \n",
       "1                 Low                       7                2   \n",
       "2                High                       3                9   \n",
       "3                 Low                       5                3   \n",
       "4              Medium                       9                1   \n",
       "\n",
       "   exam_anxiety_score  learning_style  time_management_score exam_score  \n",
       "0                   8         Reading                    3.0        100  \n",
       "1                  10         Reading                    6.0         99  \n",
       "2                   6     Kinesthetic                    7.6         98  \n",
       "3                  10         Reading                    3.2        100  \n",
       "4                  10         Reading                    7.1         98  \n",
       "\n",
       "[5 rows x 31 columns]"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#数据下载与加载\n",
    "od.download(\"https://www.kaggle.com/datasets/aryan208/student-habits-and-academic-performance-dataset\")\n",
    "file =('student-habits-and-academic-performance-dataset/enhanced_student_habits_performance_dataset/enhanced_student_habits_performance_dataset.csv')\n",
    "df= pd.read_csv(file)\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "135e6649",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "数据集描述性统计:\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>student_id</th>\n",
       "      <th>age</th>\n",
       "      <th>study_hours_per_day</th>\n",
       "      <th>social_media_hours</th>\n",
       "      <th>netflix_hours</th>\n",
       "      <th>attendance_percentage</th>\n",
       "      <th>sleep_hours</th>\n",
       "      <th>exercise_frequency</th>\n",
       "      <th>mental_health_rating</th>\n",
       "      <th>previous_gpa</th>\n",
       "      <th>semester</th>\n",
       "      <th>stress_level</th>\n",
       "      <th>social_activity</th>\n",
       "      <th>screen_time</th>\n",
       "      <th>parental_support_level</th>\n",
       "      <th>motivation_level</th>\n",
       "      <th>exam_anxiety_score</th>\n",
       "      <th>time_management_score</th>\n",
       "      <th>exam_score</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>80000.000000</td>\n",
       "      <td>80000.000000</td>\n",
       "      <td>80000.000000</td>\n",
       "      <td>80000.000000</td>\n",
       "      <td>80000.000000</td>\n",
       "      <td>80000.000000</td>\n",
       "      <td>80000.000000</td>\n",
       "      <td>80000.000000</td>\n",
       "      <td>80000.000000</td>\n",
       "      <td>80000.000000</td>\n",
       "      <td>80000.000000</td>\n",
       "      <td>80000.000000</td>\n",
       "      <td>80000.000000</td>\n",
       "      <td>80000.000000</td>\n",
       "      <td>80000.000000</td>\n",
       "      <td>80000.000000</td>\n",
       "      <td>80000.000000</td>\n",
       "      <td>80000.000000</td>\n",
       "      <td>80000.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>139999.500000</td>\n",
       "      <td>22.004288</td>\n",
       "      <td>4.174388</td>\n",
       "      <td>2.501366</td>\n",
       "      <td>1.997754</td>\n",
       "      <td>69.967884</td>\n",
       "      <td>7.017417</td>\n",
       "      <td>3.516587</td>\n",
       "      <td>6.804107</td>\n",
       "      <td>3.602448</td>\n",
       "      <td>4.497338</td>\n",
       "      <td>5.012478</td>\n",
       "      <td>2.500225</td>\n",
       "      <td>9.673029</td>\n",
       "      <td>5.479438</td>\n",
       "      <td>5.488525</td>\n",
       "      <td>8.508475</td>\n",
       "      <td>5.499132</td>\n",
       "      <td>89.141350</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>23094.155105</td>\n",
       "      <td>3.745570</td>\n",
       "      <td>2.004135</td>\n",
       "      <td>1.445441</td>\n",
       "      <td>1.155992</td>\n",
       "      <td>17.333015</td>\n",
       "      <td>1.467377</td>\n",
       "      <td>2.291575</td>\n",
       "      <td>1.921579</td>\n",
       "      <td>0.462876</td>\n",
       "      <td>2.295312</td>\n",
       "      <td>1.953174</td>\n",
       "      <td>1.704292</td>\n",
       "      <td>2.780869</td>\n",
       "      <td>2.873327</td>\n",
       "      <td>2.867782</td>\n",
       "      <td>1.796411</td>\n",
       "      <td>2.603534</td>\n",
       "      <td>11.591497</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>100000.000000</td>\n",
       "      <td>16.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>40.000000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.640000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.300000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>5.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>36.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>119999.750000</td>\n",
       "      <td>19.000000</td>\n",
       "      <td>2.800000</td>\n",
       "      <td>1.200000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>55.000000</td>\n",
       "      <td>6.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>5.500000</td>\n",
       "      <td>3.270000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>3.600000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>7.800000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>7.000000</td>\n",
       "      <td>3.200000</td>\n",
       "      <td>82.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>139999.500000</td>\n",
       "      <td>22.000000</td>\n",
       "      <td>4.125624</td>\n",
       "      <td>2.500000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>69.900000</td>\n",
       "      <td>7.000000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>6.900000</td>\n",
       "      <td>3.790000</td>\n",
       "      <td>5.000000</td>\n",
       "      <td>5.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>9.700000</td>\n",
       "      <td>5.000000</td>\n",
       "      <td>5.000000</td>\n",
       "      <td>10.000000</td>\n",
       "      <td>5.500000</td>\n",
       "      <td>93.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>159999.250000</td>\n",
       "      <td>25.000000</td>\n",
       "      <td>5.500000</td>\n",
       "      <td>3.800000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>84.900000</td>\n",
       "      <td>8.000000</td>\n",
       "      <td>6.000000</td>\n",
       "      <td>8.200000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>7.000000</td>\n",
       "      <td>6.400000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>11.600000</td>\n",
       "      <td>8.000000</td>\n",
       "      <td>8.000000</td>\n",
       "      <td>10.000000</td>\n",
       "      <td>7.800000</td>\n",
       "      <td>100.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>179999.000000</td>\n",
       "      <td>28.000000</td>\n",
       "      <td>12.000000</td>\n",
       "      <td>5.000000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>100.000000</td>\n",
       "      <td>12.000000</td>\n",
       "      <td>7.000000</td>\n",
       "      <td>10.000000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>8.000000</td>\n",
       "      <td>10.000000</td>\n",
       "      <td>5.000000</td>\n",
       "      <td>21.000000</td>\n",
       "      <td>10.000000</td>\n",
       "      <td>10.000000</td>\n",
       "      <td>10.000000</td>\n",
       "      <td>10.000000</td>\n",
       "      <td>100.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          student_id           age  study_hours_per_day  social_media_hours  \\\n",
       "count   80000.000000  80000.000000         80000.000000        80000.000000   \n",
       "mean   139999.500000     22.004288             4.174388            2.501366   \n",
       "std     23094.155105      3.745570             2.004135            1.445441   \n",
       "min    100000.000000     16.000000             0.000000            0.000000   \n",
       "25%    119999.750000     19.000000             2.800000            1.200000   \n",
       "50%    139999.500000     22.000000             4.125624            2.500000   \n",
       "75%    159999.250000     25.000000             5.500000            3.800000   \n",
       "max    179999.000000     28.000000            12.000000            5.000000   \n",
       "\n",
       "       netflix_hours  attendance_percentage   sleep_hours  exercise_frequency  \\\n",
       "count   80000.000000           80000.000000  80000.000000        80000.000000   \n",
       "mean        1.997754              69.967884      7.017417            3.516587   \n",
       "std         1.155992              17.333015      1.467377            2.291575   \n",
       "min         0.000000              40.000000      4.000000            0.000000   \n",
       "25%         1.000000              55.000000      6.000000            2.000000   \n",
       "50%         2.000000              69.900000      7.000000            4.000000   \n",
       "75%         3.000000              84.900000      8.000000            6.000000   \n",
       "max         4.000000             100.000000     12.000000            7.000000   \n",
       "\n",
       "       mental_health_rating  previous_gpa      semester  stress_level  \\\n",
       "count          80000.000000  80000.000000  80000.000000  80000.000000   \n",
       "mean               6.804107      3.602448      4.497338      5.012478   \n",
       "std                1.921579      0.462876      2.295312      1.953174   \n",
       "min                1.000000      1.640000      1.000000      1.000000   \n",
       "25%                5.500000      3.270000      2.000000      3.600000   \n",
       "50%                6.900000      3.790000      5.000000      5.000000   \n",
       "75%                8.200000      4.000000      7.000000      6.400000   \n",
       "max               10.000000      4.000000      8.000000     10.000000   \n",
       "\n",
       "       social_activity   screen_time  parental_support_level  \\\n",
       "count     80000.000000  80000.000000            80000.000000   \n",
       "mean          2.500225      9.673029                5.479438   \n",
       "std           1.704292      2.780869                2.873327   \n",
       "min           0.000000      0.300000                1.000000   \n",
       "25%           1.000000      7.800000                3.000000   \n",
       "50%           2.000000      9.700000                5.000000   \n",
       "75%           4.000000     11.600000                8.000000   \n",
       "max           5.000000     21.000000               10.000000   \n",
       "\n",
       "       motivation_level  exam_anxiety_score  time_management_score  \\\n",
       "count      80000.000000        80000.000000           80000.000000   \n",
       "mean           5.488525            8.508475               5.499132   \n",
       "std            2.867782            1.796411               2.603534   \n",
       "min            1.000000            5.000000               1.000000   \n",
       "25%            3.000000            7.000000               3.200000   \n",
       "50%            5.000000           10.000000               5.500000   \n",
       "75%            8.000000           10.000000               7.800000   \n",
       "max           10.000000           10.000000              10.000000   \n",
       "\n",
       "         exam_score  \n",
       "count  80000.000000  \n",
       "mean      89.141350  \n",
       "std       11.591497  \n",
       "min       36.000000  \n",
       "25%       82.000000  \n",
       "50%       93.000000  \n",
       "75%      100.000000  \n",
       "max      100.000000  "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "print(\"\\n数据集描述性统计:\")\n",
    "display(df.describe())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "e74222dc",
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "处理后的缺失值统计：\n",
      "student_id                       0\n",
      "age                              0\n",
      "gender                           0\n",
      "major                            0\n",
      "study_hours_per_day              0\n",
      "social_media_hours               0\n",
      "netflix_hours                    0\n",
      "part_time_job                    0\n",
      "attendance_percentage            0\n",
      "sleep_hours                      0\n",
      "diet_quality                     0\n",
      "exercise_frequency               0\n",
      "parental_education_level         0\n",
      "internet_quality                 0\n",
      "mental_health_rating             0\n",
      "extracurricular_participation    0\n",
      "previous_gpa                     0\n",
      "semester                         0\n",
      "stress_level                     0\n",
      "dropout_risk                     0\n",
      "social_activity                  0\n",
      "screen_time                      0\n",
      "study_environment                0\n",
      "access_to_tutoring               0\n",
      "family_income_range              0\n",
      "parental_support_level           0\n",
      "motivation_level                 0\n",
      "exam_anxiety_score               0\n",
      "learning_style                   0\n",
      "time_management_score            0\n",
      "exam_score                       0\n",
      "dtype: int64\n"
     ]
    }
   ],
   "source": [
    "# 缺失值处理\n",
    "# 分类变量使用众数填充\n",
    "categorical_cols = ['diet_quality', 'parental_education_level', 'study_environment', 'learning_style']\n",
    "for col in categorical_cols:\n",
    "    mode_val = df[col].mode()[0]\n",
    "    df[col].fillna(mode_val, inplace=True)\n",
    "\n",
    "# 数值变量使用中位数填充\n",
    "numerical_cols = ['time_management_score', 'sleep_hours', 'attendance_percentage']\n",
    "for col in numerical_cols:\n",
    "    median_val = df[col].median()\n",
    "    df[col].fillna(median_val, inplace=True)\n",
    "\n",
    "print(\"\\n处理后的缺失值统计：\")\n",
    "print(df.isnull().sum())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "62f21b97",
   "metadata": {},
   "outputs": [],
   "source": [
    "#异常值处理\n",
    "# 使用IQR方法处理异常值\n",
    "def handle_outliers(df, column):\n",
    "    Q1 = df[column].quantile(0.25)\n",
    "    Q3 = df[column].quantile(0.75)\n",
    "    IQR = Q3 - Q1\n",
    "    lower_bound = Q1 - 1.5 * IQR\n",
    "    upper_bound = Q3 + 1.5 * IQR\n",
    "    \n",
    "    # 将异常值替换为边界值\n",
    "    df[column] = np.where(df[column] < lower_bound, lower_bound, df[column])\n",
    "    df[column] = np.where(df[column] > upper_bound, upper_bound, df[column])\n",
    "    return df\n",
    "\n",
    "# 处理数值特征的异常值\n",
    "numerical_features = ['study_hours_per_day', 'social_media_hours', 'netflix_hours', \n",
    "                     'sleep_hours', 'exercise_frequency', 'social_activity',\n",
    "                     'screen_time', 'attendance_percentage', 'previous_gpa',\n",
    "                     'stress_level', 'motivation_level', 'exam_anxiety_score',\n",
    "                     'time_management_score', 'exam_score']\n",
    "\n",
    "for feature in numerical_features:\n",
    "    df = handle_outliers(df, feature)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "8499b48c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>student_id</th>\n",
       "      <th>age</th>\n",
       "      <th>gender</th>\n",
       "      <th>major</th>\n",
       "      <th>study_hours_per_day</th>\n",
       "      <th>social_media_hours</th>\n",
       "      <th>netflix_hours</th>\n",
       "      <th>part_time_job</th>\n",
       "      <th>attendance_percentage</th>\n",
       "      <th>sleep_hours</th>\n",
       "      <th>...</th>\n",
       "      <th>screen_time</th>\n",
       "      <th>study_environment</th>\n",
       "      <th>access_to_tutoring</th>\n",
       "      <th>family_income_range</th>\n",
       "      <th>parental_support_level</th>\n",
       "      <th>motivation_level</th>\n",
       "      <th>exam_anxiety_score</th>\n",
       "      <th>learning_style</th>\n",
       "      <th>time_management_score</th>\n",
       "      <th>exam_score</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>100000</td>\n",
       "      <td>26</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>7.645367</td>\n",
       "      <td>3.0</td>\n",
       "      <td>0.1</td>\n",
       "      <td>1</td>\n",
       "      <td>70.3</td>\n",
       "      <td>6.2</td>\n",
       "      <td>...</td>\n",
       "      <td>10.9</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>9</td>\n",
       "      <td>7.0</td>\n",
       "      <td>8.0</td>\n",
       "      <td>2</td>\n",
       "      <td>3.0</td>\n",
       "      <td>100.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>100001</td>\n",
       "      <td>28</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>5.700000</td>\n",
       "      <td>0.5</td>\n",
       "      <td>0.4</td>\n",
       "      <td>0</td>\n",
       "      <td>88.4</td>\n",
       "      <td>7.2</td>\n",
       "      <td>...</td>\n",
       "      <td>8.3</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>7</td>\n",
       "      <td>2.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>2</td>\n",
       "      <td>6.0</td>\n",
       "      <td>99.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>100002</td>\n",
       "      <td>17</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>2.400000</td>\n",
       "      <td>4.2</td>\n",
       "      <td>0.7</td>\n",
       "      <td>0</td>\n",
       "      <td>82.1</td>\n",
       "      <td>9.2</td>\n",
       "      <td>...</td>\n",
       "      <td>8.0</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>9.0</td>\n",
       "      <td>6.0</td>\n",
       "      <td>1</td>\n",
       "      <td>7.6</td>\n",
       "      <td>98.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>100003</td>\n",
       "      <td>27</td>\n",
       "      <td>2</td>\n",
       "      <td>5</td>\n",
       "      <td>3.400000</td>\n",
       "      <td>4.6</td>\n",
       "      <td>2.3</td>\n",
       "      <td>1</td>\n",
       "      <td>79.3</td>\n",
       "      <td>4.2</td>\n",
       "      <td>...</td>\n",
       "      <td>11.7</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>3.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>2</td>\n",
       "      <td>3.2</td>\n",
       "      <td>100.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>100004</td>\n",
       "      <td>25</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>4.700000</td>\n",
       "      <td>0.8</td>\n",
       "      <td>2.7</td>\n",
       "      <td>1</td>\n",
       "      <td>62.9</td>\n",
       "      <td>6.5</td>\n",
       "      <td>...</td>\n",
       "      <td>9.4</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>9</td>\n",
       "      <td>1.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>2</td>\n",
       "      <td>7.1</td>\n",
       "      <td>98.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 31 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   student_id  age  gender  major  study_hours_per_day  social_media_hours  \\\n",
       "0      100000   26       1      3             7.645367                 3.0   \n",
       "1      100001   28       1      0             5.700000                 0.5   \n",
       "2      100002   17       1      0             2.400000                 4.2   \n",
       "3      100003   27       2      5             3.400000                 4.6   \n",
       "4      100004   25       0      2             4.700000                 0.8   \n",
       "\n",
       "   netflix_hours  part_time_job  attendance_percentage  sleep_hours  ...  \\\n",
       "0            0.1              1                   70.3          6.2  ...   \n",
       "1            0.4              0                   88.4          7.2  ...   \n",
       "2            0.7              0                   82.1          9.2  ...   \n",
       "3            2.3              1                   79.3          4.2  ...   \n",
       "4            2.7              1                   62.9          6.5  ...   \n",
       "\n",
       "   screen_time  study_environment  access_to_tutoring  family_income_range  \\\n",
       "0         10.9                  1                   1                    3   \n",
       "1          8.3                  1                   1                    1   \n",
       "2          8.0                  3                   1                    3   \n",
       "3         11.7                  1                   1                    1   \n",
       "4          9.4                  4                   1                    2   \n",
       "\n",
       "   parental_support_level  motivation_level  exam_anxiety_score  \\\n",
       "0                       9               7.0                 8.0   \n",
       "1                       7               2.0                10.0   \n",
       "2                       3               9.0                 6.0   \n",
       "3                       5               3.0                10.0   \n",
       "4                       9               1.0                10.0   \n",
       "\n",
       "   learning_style  time_management_score  exam_score  \n",
       "0               2                    3.0       100.0  \n",
       "1               2                    6.0        99.0  \n",
       "2               1                    7.6        98.0  \n",
       "3               2                    3.2       100.0  \n",
       "4               2                    7.1        98.0  \n",
       "\n",
       "[5 rows x 31 columns]"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# 类型转换与编码\n",
    "# 二元变量转换为0/1\n",
    "binary_cols = ['part_time_job', 'extracurricular_participation', \n",
    "              'access_to_tutoring', 'dropout_risk']\n",
    "for col in binary_cols:\n",
    "    df[col] = df[col].map({'Yes': 1, 'No': 0})\n",
    "\n",
    "# 分类变量编码\n",
    "categorical_features = ['major', 'gender', 'study_environment', 'learning_style']\n",
    "label_encoders = {}\n",
    "for feature in categorical_features:\n",
    "    le = LabelEncoder()\n",
    "    df[feature] = le.fit_transform(df[feature])\n",
    "    label_encoders[feature] = le\n",
    "\n",
    "# 有序分类变量映射\n",
    "diet_mapping = {'Poor': 1, 'Fair': 2, 'Good': 3}\n",
    "internet_mapping = {'Low': 1, 'Medium': 2, 'High': 3}\n",
    "family_income_mapping={'Low': 1, 'Medium': 2, 'High': 3}\n",
    "parental_edu_mapping = {\n",
    "    'High School': 1, \n",
    "    'Some College': 2, \n",
    "    'Bachelor\\'s Degree': 3,\n",
    "    'Master\\'s Degree': 4,\n",
    "    'Doctorate': 5\n",
    "}\n",
    "df['diet_quality'] = df['diet_quality'].map(diet_mapping)\n",
    "df['internet_quality'] = df['internet_quality'].map(internet_mapping)\n",
    "df['family_income_range'] = df['family_income_range'].map(family_income_mapping)\n",
    "df['parental_education_level'] = df['parental_education_level'].map(parental_edu_mapping)\n",
    "\n",
    "df.head()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "d051e553",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "特征工程：\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>learning_focus_index</th>\n",
       "      <th>digital_distraction_index</th>\n",
       "      <th>time_balance</th>\n",
       "      <th>academic_stress_index</th>\n",
       "      <th>health_balance_index</th>\n",
       "      <th>motivation_composite</th>\n",
       "      <th>gpa_growth_potential</th>\n",
       "      <th>learning_efficiency</th>\n",
       "      <th>academic_resilience</th>\n",
       "      <th>focus_motivation_interaction</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2.293610</td>\n",
       "      <td>0.604691</td>\n",
       "      <td>0.806214</td>\n",
       "      <td>9.801987</td>\n",
       "      <td>1.183769</td>\n",
       "      <td>0.46</td>\n",
       "      <td>0.686050</td>\n",
       "      <td>0.033336</td>\n",
       "      <td>4.20</td>\n",
       "      <td>1.055061</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1.140000</td>\n",
       "      <td>0.090528</td>\n",
       "      <td>0.691273</td>\n",
       "      <td>9.801987</td>\n",
       "      <td>1.402859</td>\n",
       "      <td>0.11</td>\n",
       "      <td>0.839400</td>\n",
       "      <td>0.042760</td>\n",
       "      <td>0.92</td>\n",
       "      <td>0.125400</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.608000</td>\n",
       "      <td>2.703853</td>\n",
       "      <td>0.674226</td>\n",
       "      <td>1.353353</td>\n",
       "      <td>1.446335</td>\n",
       "      <td>0.42</td>\n",
       "      <td>0.846975</td>\n",
       "      <td>0.053935</td>\n",
       "      <td>5.88</td>\n",
       "      <td>0.255360</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.725333</td>\n",
       "      <td>3.035005</td>\n",
       "      <td>0.712742</td>\n",
       "      <td>3.753111</td>\n",
       "      <td>1.218985</td>\n",
       "      <td>0.10</td>\n",
       "      <td>0.723550</td>\n",
       "      <td>0.022095</td>\n",
       "      <td>2.20</td>\n",
       "      <td>0.072533</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1.112333</td>\n",
       "      <td>0.903876</td>\n",
       "      <td>0.742508</td>\n",
       "      <td>9.559975</td>\n",
       "      <td>1.433397</td>\n",
       "      <td>0.12</td>\n",
       "      <td>0.783150</td>\n",
       "      <td>0.058033</td>\n",
       "      <td>1.28</td>\n",
       "      <td>0.133480</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   learning_focus_index  digital_distraction_index  time_balance  \\\n",
       "0              2.293610                   0.604691      0.806214   \n",
       "1              1.140000                   0.090528      0.691273   \n",
       "2              0.608000                   2.703853      0.674226   \n",
       "3              0.725333                   3.035005      0.712742   \n",
       "4              1.112333                   0.903876      0.742508   \n",
       "\n",
       "   academic_stress_index  health_balance_index  motivation_composite  \\\n",
       "0               9.801987              1.183769                  0.46   \n",
       "1               9.801987              1.402859                  0.11   \n",
       "2               1.353353              1.446335                  0.42   \n",
       "3               3.753111              1.218985                  0.10   \n",
       "4               9.559975              1.433397                  0.12   \n",
       "\n",
       "   gpa_growth_potential  learning_efficiency  academic_resilience  \\\n",
       "0              0.686050             0.033336                 4.20   \n",
       "1              0.839400             0.042760                 0.92   \n",
       "2              0.846975             0.053935                 5.88   \n",
       "3              0.723550             0.022095                 2.20   \n",
       "4              0.783150             0.058033                 1.28   \n",
       "\n",
       "   focus_motivation_interaction  \n",
       "0                      1.055061  \n",
       "1                      0.125400  \n",
       "2                      0.255360  \n",
       "3                      0.072533  \n",
       "4                      0.133480  "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# 1. 学习专注指数-基于认知负荷理论\n",
    "df['learning_focus_index'] = (\n",
    "    df['study_hours_per_day'] * \n",
    "    (df['time_management_score'] / 10) *\n",
    "    (df['internet_quality'] / 3)\n",
    ")\n",
    "# 2. 数字分心指数-基于注意力分散理论\n",
    "df['digital_distraction_index'] = (\n",
    "    (df['social_media_hours']**1.5 + df['netflix_hours']**1.5) / \n",
    "    (df['study_hours_per_day'] + 1)  # 相对于学习时间的比例\n",
    ")\n",
    "# 3. 健康平衡指数 - 基于自我决定理论\n",
    "df['health_balance_index'] = (\n",
    "    0.3 * np.log1p(df['sleep_hours']) +          # 睡眠收益递减\n",
    "    0.2 * (df['diet_quality']**0.5) +           # 饮食质量平方根转换\n",
    "    0.3 * np.tanh(df['exercise_frequency']/2) + # 运动饱和效应\n",
    "    0.2 * df['mental_health_rating']/10\n",
    ")\n",
    "# 4. 学业压力指数-基于压力-成绩倒U型关系理论\n",
    "def quadratic_stress_effect(stress, optimal=6, scale=0.5):\n",
    "    return 10 * np.exp(-scale * (stress - optimal)**2)\n",
    "df['academic_stress_index'] = quadratic_stress_effect(df['stress_level'])\n",
    "\n",
    "# 5. 学习动机综合指数-基于期望价值理论\n",
    "df['motivation_composite'] = (\n",
    "    0.5 * (df['motivation_level'] / 10) +\n",
    "    0.3 * (df['parental_support_level'] / 10) -\n",
    "    0.2 * (df['exam_anxiety_score'] / 10)\n",
    ")\n",
    "# 6. 进步潜力-基于增长思维理论\n",
    "df['gpa_growth_potential'] = (\n",
    "    0.35 * (df['previous_gpa'] / 4.0) +\n",
    "    0.35 * (df['attendance_percentage'] / 100) +\n",
    "    0.3 * (df['time_management_score'] / 10)\n",
    ")\n",
    "# 7. 学习效率指数-基于认知心理学\n",
    "df['learning_efficiency'] = (\n",
    "    df['previous_gpa'] * \n",
    "    (df['time_management_score']/10) * \n",
    "    (df['learning_focus_index']/df['learning_focus_index'].max())\n",
    ") / (df['study_hours_per_day'] + 1)\n",
    "\n",
    "# 8. 学习韧性指数-应对挫折能力\n",
    "df['academic_resilience'] = 0.6*df['motivation_level'] + 0.4*df['mental_health_rating'] - 0.3*df['exam_anxiety_score']\n",
    "\n",
    "# 9. 动机与专注交互特征-\n",
    "df['focus_motivation_interaction'] = df['learning_focus_index'] * df['motivation_composite']\n",
    "\n",
    "# 10. 时间分配健康度 - 基于时间管理理论\n",
    "# 理想比例：学习:娱乐:睡眠=4:3:3\n",
    "ideal_ratio = np.array([0.4, 0.3, 0.3])\n",
    "actual_ratio = np.column_stack([\n",
    "    df['study_hours_per_day'] / 24,\n",
    "    (df['social_media_hours'] + df['netflix_hours']) / 24,\n",
    "    df['sleep_hours'] / 24\n",
    "])\n",
    "euclidean_dist = np.sqrt(np.sum((actual_ratio - ideal_ratio)**2, axis=1))\n",
    "df['time_balance'] = 1 - euclidean_dist\n",
    "\n",
    "# 展示新特征\n",
    "print(\"\\n特征工程：\")\n",
    "display(df[['learning_focus_index','digital_distraction_index',\n",
    "    'time_balance', 'academic_stress_index','health_balance_index',\n",
    "    'motivation_composite', 'gpa_growth_potential', 'learning_efficiency',\n",
    "'academic_resilience', 'focus_motivation_interaction']].head())\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "969da1d4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 2000x1500 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1000x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "## 特征相关性分析\n",
    "plt.figure(figsize=(20, 15))\n",
    "corr_matrix = df.corr()\n",
    "sns.heatmap(corr_matrix, annot=False, cmap='coolwarm', center=0)\n",
    "plt.title('特征相关性热力图')\n",
    "plt.show()\n",
    "\n",
    "##新特征与目标变量的相关性\n",
    "new_features = [\n",
    "    'learning_focus_index','digital_distraction_index',\n",
    "    'time_balance', 'academic_stress_index','health_balance_index',\n",
    "    'motivation_composite', 'gpa_growth_potential', 'learning_efficiency',\n",
    "    'academic_resilience', 'focus_motivation_interaction'\n",
    "]\n",
    "\n",
    "corr_with_target = df[new_features + ['exam_score']].corr()['exam_score'][:-1].sort_values()\n",
    "\n",
    "plt.figure(figsize=(10, 6))\n",
    "corr_with_target.plot(kind='barh', color='skyblue')\n",
    "plt.title('新特征与考试成绩的相关性')\n",
    "plt.xlabel('相关系数')\n",
    "plt.grid(axis='x', linestyle='--', alpha=0.7)\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "ec274e4a",
   "metadata": {},
   "outputs": [],
   "source": [
    "#3.模型构建与评估"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "cb496389",
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "ename": "ValueError",
     "evalue": "\nAll the 5 fits failed.\nIt is very likely that your model is misconfigured.\nYou can try to debug the error by setting error_score='raise'.\n\nBelow are more details about the failures:\n--------------------------------------------------------------------------------\n5 fits failed with the following error:\nTraceback (most recent call last):\n  File \"D:\\app\\Anacodna3\\Lib\\site-packages\\sklearn\\model_selection\\_validation.py\", line 732, in _fit_and_score\n    estimator.fit(X_train, y_train, **fit_params)\n  File \"D:\\app\\Anacodna3\\Lib\\site-packages\\sklearn\\base.py\", line 1151, in wrapper\n    return fit_method(estimator, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\app\\Anacodna3\\Lib\\site-packages\\sklearn\\ensemble\\_forest.py\", line 348, in fit\n    X, y = self._validate_data(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\app\\Anacodna3\\Lib\\site-packages\\sklearn\\base.py\", line 621, in _validate_data\n    X, y = check_X_y(X, y, **check_params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\app\\Anacodna3\\Lib\\site-packages\\sklearn\\utils\\validation.py\", line 1147, in check_X_y\n    X = check_array(\n        ^^^^^^^^^^^^\n  File \"D:\\app\\Anacodna3\\Lib\\site-packages\\sklearn\\utils\\validation.py\", line 959, in check_array\n    _assert_all_finite(\n  File \"D:\\app\\Anacodna3\\Lib\\site-packages\\sklearn\\utils\\validation.py\", line 124, in _assert_all_finite\n    _assert_all_finite_element_wise(\n  File \"D:\\app\\Anacodna3\\Lib\\site-packages\\sklearn\\utils\\validation.py\", line 173, in _assert_all_finite_element_wise\n    raise ValueError(msg_err)\nValueError: Input X contains NaN.\nRandomForestRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values\n",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mValueError\u001b[0m                                Traceback (most recent call last)",
      "Cell \u001b[1;32mIn[11], line 34\u001b[0m\n\u001b[0;32m     32\u001b[0m results \u001b[38;5;241m=\u001b[39m {}\n\u001b[0;32m     33\u001b[0m \u001b[38;5;28;01mfor\u001b[39;00m name, model \u001b[38;5;129;01min\u001b[39;00m models\u001b[38;5;241m.\u001b[39mitems():\n\u001b[1;32m---> 34\u001b[0m     cv_scores \u001b[38;5;241m=\u001b[39m cross_val_score(model, X_train, y_train, \n\u001b[0;32m     35\u001b[0m                                cv\u001b[38;5;241m=\u001b[39m\u001b[38;5;241m5\u001b[39m, scoring\u001b[38;5;241m=\u001b[39m\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mr2\u001b[39m\u001b[38;5;124m'\u001b[39m)\n\u001b[0;32m     36\u001b[0m     results[name] \u001b[38;5;241m=\u001b[39m cv_scores\u001b[38;5;241m.\u001b[39mmean()\n\u001b[0;32m     37\u001b[0m     \u001b[38;5;28mprint\u001b[39m(\u001b[38;5;124mf\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;132;01m{\u001b[39;00mname\u001b[38;5;132;01m}\u001b[39;00m\u001b[38;5;124m 交叉验证R²: \u001b[39m\u001b[38;5;132;01m{\u001b[39;00mcv_scores\u001b[38;5;241m.\u001b[39mmean()\u001b[38;5;132;01m:\u001b[39;00m\u001b[38;5;124m.4f\u001b[39m\u001b[38;5;132;01m}\u001b[39;00m\u001b[38;5;124m (±\u001b[39m\u001b[38;5;132;01m{\u001b[39;00mcv_scores\u001b[38;5;241m.\u001b[39mstd()\u001b[38;5;132;01m:\u001b[39;00m\u001b[38;5;124m.4f\u001b[39m\u001b[38;5;132;01m}\u001b[39;00m\u001b[38;5;124m)\u001b[39m\u001b[38;5;124m\"\u001b[39m)\n",
      "File \u001b[1;32mD:\\app\\Anacodna3\\Lib\\site-packages\\sklearn\\model_selection\\_validation.py:562\u001b[0m, in \u001b[0;36mcross_val_score\u001b[1;34m(estimator, X, y, groups, scoring, cv, n_jobs, verbose, fit_params, pre_dispatch, error_score)\u001b[0m\n\u001b[0;32m    559\u001b[0m \u001b[38;5;66;03m# To ensure multimetric format is not supported\u001b[39;00m\n\u001b[0;32m    560\u001b[0m scorer \u001b[38;5;241m=\u001b[39m check_scoring(estimator, scoring\u001b[38;5;241m=\u001b[39mscoring)\n\u001b[1;32m--> 562\u001b[0m cv_results \u001b[38;5;241m=\u001b[39m cross_validate(\n\u001b[0;32m    563\u001b[0m     estimator\u001b[38;5;241m=\u001b[39mestimator,\n\u001b[0;32m    564\u001b[0m     X\u001b[38;5;241m=\u001b[39mX,\n\u001b[0;32m    565\u001b[0m     y\u001b[38;5;241m=\u001b[39my,\n\u001b[0;32m    566\u001b[0m     groups\u001b[38;5;241m=\u001b[39mgroups,\n\u001b[0;32m    567\u001b[0m     scoring\u001b[38;5;241m=\u001b[39m{\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mscore\u001b[39m\u001b[38;5;124m\"\u001b[39m: scorer},\n\u001b[0;32m    568\u001b[0m     cv\u001b[38;5;241m=\u001b[39mcv,\n\u001b[0;32m    569\u001b[0m     n_jobs\u001b[38;5;241m=\u001b[39mn_jobs,\n\u001b[0;32m    570\u001b[0m     verbose\u001b[38;5;241m=\u001b[39mverbose,\n\u001b[0;32m    571\u001b[0m     fit_params\u001b[38;5;241m=\u001b[39mfit_params,\n\u001b[0;32m    572\u001b[0m     pre_dispatch\u001b[38;5;241m=\u001b[39mpre_dispatch,\n\u001b[0;32m    573\u001b[0m     error_score\u001b[38;5;241m=\u001b[39merror_score,\n\u001b[0;32m    574\u001b[0m )\n\u001b[0;32m    575\u001b[0m \u001b[38;5;28;01mreturn\u001b[39;00m cv_results[\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mtest_score\u001b[39m\u001b[38;5;124m\"\u001b[39m]\n",
      "File \u001b[1;32mD:\\app\\Anacodna3\\Lib\\site-packages\\sklearn\\utils\\_param_validation.py:211\u001b[0m, in \u001b[0;36mvalidate_params.<locals>.decorator.<locals>.wrapper\u001b[1;34m(*args, **kwargs)\u001b[0m\n\u001b[0;32m    205\u001b[0m \u001b[38;5;28;01mtry\u001b[39;00m:\n\u001b[0;32m    206\u001b[0m     \u001b[38;5;28;01mwith\u001b[39;00m config_context(\n\u001b[0;32m    207\u001b[0m         skip_parameter_validation\u001b[38;5;241m=\u001b[39m(\n\u001b[0;32m    208\u001b[0m             prefer_skip_nested_validation \u001b[38;5;129;01mor\u001b[39;00m global_skip_validation\n\u001b[0;32m    209\u001b[0m         )\n\u001b[0;32m    210\u001b[0m     ):\n\u001b[1;32m--> 211\u001b[0m         \u001b[38;5;28;01mreturn\u001b[39;00m func(\u001b[38;5;241m*\u001b[39margs, \u001b[38;5;241m*\u001b[39m\u001b[38;5;241m*\u001b[39mkwargs)\n\u001b[0;32m    212\u001b[0m \u001b[38;5;28;01mexcept\u001b[39;00m InvalidParameterError \u001b[38;5;28;01mas\u001b[39;00m e:\n\u001b[0;32m    213\u001b[0m     \u001b[38;5;66;03m# When the function is just a wrapper around an estimator, we allow\u001b[39;00m\n\u001b[0;32m    214\u001b[0m     \u001b[38;5;66;03m# the function to delegate validation to the estimator, but we replace\u001b[39;00m\n\u001b[0;32m    215\u001b[0m     \u001b[38;5;66;03m# the name of the estimator by the name of the function in the error\u001b[39;00m\n\u001b[0;32m    216\u001b[0m     \u001b[38;5;66;03m# message to avoid confusion.\u001b[39;00m\n\u001b[0;32m    217\u001b[0m     msg \u001b[38;5;241m=\u001b[39m re\u001b[38;5;241m.\u001b[39msub(\n\u001b[0;32m    218\u001b[0m         \u001b[38;5;124mr\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mparameter of \u001b[39m\u001b[38;5;124m\\\u001b[39m\u001b[38;5;124mw+ must be\u001b[39m\u001b[38;5;124m\"\u001b[39m,\n\u001b[0;32m    219\u001b[0m         \u001b[38;5;124mf\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mparameter of \u001b[39m\u001b[38;5;132;01m{\u001b[39;00mfunc\u001b[38;5;241m.\u001b[39m\u001b[38;5;18m__qualname__\u001b[39m\u001b[38;5;132;01m}\u001b[39;00m\u001b[38;5;124m must be\u001b[39m\u001b[38;5;124m\"\u001b[39m,\n\u001b[0;32m    220\u001b[0m         \u001b[38;5;28mstr\u001b[39m(e),\n\u001b[0;32m    221\u001b[0m     )\n",
      "File \u001b[1;32mD:\\app\\Anacodna3\\Lib\\site-packages\\sklearn\\model_selection\\_validation.py:328\u001b[0m, in \u001b[0;36mcross_validate\u001b[1;34m(estimator, X, y, groups, scoring, cv, n_jobs, verbose, fit_params, pre_dispatch, return_train_score, return_estimator, return_indices, error_score)\u001b[0m\n\u001b[0;32m    308\u001b[0m parallel \u001b[38;5;241m=\u001b[39m Parallel(n_jobs\u001b[38;5;241m=\u001b[39mn_jobs, verbose\u001b[38;5;241m=\u001b[39mverbose, pre_dispatch\u001b[38;5;241m=\u001b[39mpre_dispatch)\n\u001b[0;32m    309\u001b[0m results \u001b[38;5;241m=\u001b[39m parallel(\n\u001b[0;32m    310\u001b[0m     delayed(_fit_and_score)(\n\u001b[0;32m    311\u001b[0m         clone(estimator),\n\u001b[1;32m   (...)\u001b[0m\n\u001b[0;32m    325\u001b[0m     \u001b[38;5;28;01mfor\u001b[39;00m train, test \u001b[38;5;129;01min\u001b[39;00m indices\n\u001b[0;32m    326\u001b[0m )\n\u001b[1;32m--> 328\u001b[0m _warn_or_raise_about_fit_failures(results, error_score)\n\u001b[0;32m    330\u001b[0m \u001b[38;5;66;03m# For callable scoring, the return type is only know after calling. If the\u001b[39;00m\n\u001b[0;32m    331\u001b[0m \u001b[38;5;66;03m# return type is a dictionary, the error scores can now be inserted with\u001b[39;00m\n\u001b[0;32m    332\u001b[0m \u001b[38;5;66;03m# the correct key.\u001b[39;00m\n\u001b[0;32m    333\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;28mcallable\u001b[39m(scoring):\n",
      "File \u001b[1;32mD:\\app\\Anacodna3\\Lib\\site-packages\\sklearn\\model_selection\\_validation.py:414\u001b[0m, in \u001b[0;36m_warn_or_raise_about_fit_failures\u001b[1;34m(results, error_score)\u001b[0m\n\u001b[0;32m    407\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m num_failed_fits \u001b[38;5;241m==\u001b[39m num_fits:\n\u001b[0;32m    408\u001b[0m     all_fits_failed_message \u001b[38;5;241m=\u001b[39m (\n\u001b[0;32m    409\u001b[0m         \u001b[38;5;124mf\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;130;01m\\n\u001b[39;00m\u001b[38;5;124mAll the \u001b[39m\u001b[38;5;132;01m{\u001b[39;00mnum_fits\u001b[38;5;132;01m}\u001b[39;00m\u001b[38;5;124m fits failed.\u001b[39m\u001b[38;5;130;01m\\n\u001b[39;00m\u001b[38;5;124m\"\u001b[39m\n\u001b[0;32m    410\u001b[0m         \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mIt is very likely that your model is misconfigured.\u001b[39m\u001b[38;5;130;01m\\n\u001b[39;00m\u001b[38;5;124m\"\u001b[39m\n\u001b[0;32m    411\u001b[0m         \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mYou can try to debug the error by setting error_score=\u001b[39m\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mraise\u001b[39m\u001b[38;5;124m'\u001b[39m\u001b[38;5;124m.\u001b[39m\u001b[38;5;130;01m\\n\u001b[39;00m\u001b[38;5;130;01m\\n\u001b[39;00m\u001b[38;5;124m\"\u001b[39m\n\u001b[0;32m    412\u001b[0m         \u001b[38;5;124mf\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mBelow are more details about the failures:\u001b[39m\u001b[38;5;130;01m\\n\u001b[39;00m\u001b[38;5;132;01m{\u001b[39;00mfit_errors_summary\u001b[38;5;132;01m}\u001b[39;00m\u001b[38;5;124m\"\u001b[39m\n\u001b[0;32m    413\u001b[0m     )\n\u001b[1;32m--> 414\u001b[0m     \u001b[38;5;28;01mraise\u001b[39;00m \u001b[38;5;167;01mValueError\u001b[39;00m(all_fits_failed_message)\n\u001b[0;32m    416\u001b[0m \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[0;32m    417\u001b[0m     some_fits_failed_message \u001b[38;5;241m=\u001b[39m (\n\u001b[0;32m    418\u001b[0m         \u001b[38;5;124mf\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;130;01m\\n\u001b[39;00m\u001b[38;5;132;01m{\u001b[39;00mnum_failed_fits\u001b[38;5;132;01m}\u001b[39;00m\u001b[38;5;124m fits failed out of a total of \u001b[39m\u001b[38;5;132;01m{\u001b[39;00mnum_fits\u001b[38;5;132;01m}\u001b[39;00m\u001b[38;5;124m.\u001b[39m\u001b[38;5;130;01m\\n\u001b[39;00m\u001b[38;5;124m\"\u001b[39m\n\u001b[0;32m    419\u001b[0m         \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mThe score on these train-test partitions for these parameters\u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[1;32m   (...)\u001b[0m\n\u001b[0;32m    423\u001b[0m         \u001b[38;5;124mf\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mBelow are more details about the failures:\u001b[39m\u001b[38;5;130;01m\\n\u001b[39;00m\u001b[38;5;132;01m{\u001b[39;00mfit_errors_summary\u001b[38;5;132;01m}\u001b[39;00m\u001b[38;5;124m\"\u001b[39m\n\u001b[0;32m    424\u001b[0m     )\n",
      "\u001b[1;31mValueError\u001b[0m: \nAll the 5 fits failed.\nIt is very likely that your model is misconfigured.\nYou can try to debug the error by setting error_score='raise'.\n\nBelow are more details about the failures:\n--------------------------------------------------------------------------------\n5 fits failed with the following error:\nTraceback (most recent call last):\n  File \"D:\\app\\Anacodna3\\Lib\\site-packages\\sklearn\\model_selection\\_validation.py\", line 732, in _fit_and_score\n    estimator.fit(X_train, y_train, **fit_params)\n  File \"D:\\app\\Anacodna3\\Lib\\site-packages\\sklearn\\base.py\", line 1151, in wrapper\n    return fit_method(estimator, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\app\\Anacodna3\\Lib\\site-packages\\sklearn\\ensemble\\_forest.py\", line 348, in fit\n    X, y = self._validate_data(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\app\\Anacodna3\\Lib\\site-packages\\sklearn\\base.py\", line 621, in _validate_data\n    X, y = check_X_y(X, y, **check_params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"D:\\app\\Anacodna3\\Lib\\site-packages\\sklearn\\utils\\validation.py\", line 1147, in check_X_y\n    X = check_array(\n        ^^^^^^^^^^^^\n  File \"D:\\app\\Anacodna3\\Lib\\site-packages\\sklearn\\utils\\validation.py\", line 959, in check_array\n    _assert_all_finite(\n  File \"D:\\app\\Anacodna3\\Lib\\site-packages\\sklearn\\utils\\validation.py\", line 124, in _assert_all_finite\n    _assert_all_finite_element_wise(\n  File \"D:\\app\\Anacodna3\\Lib\\site-packages\\sklearn\\utils\\validation.py\", line 173, in _assert_all_finite_element_wise\n    raise ValueError(msg_err)\nValueError: Input X contains NaN.\nRandomForestRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values\n"
     ]
    }
   ],
   "source": [
    "# 导入所需库\n",
    "from sklearn.model_selection import train_test_split, cross_val_score, GridSearchCV\n",
    "from sklearn.ensemble import RandomForestRegressor\n",
    "from sklearn.linear_model import LinearRegression\n",
    "from sklearn.svm import SVR\n",
    "from sklearn.neighbors import KNeighborsRegressor\n",
    "from xgboost import XGBRegressor\n",
    "from sklearn.metrics import mean_squared_error, r2_score\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "import numpy as np\n",
    "\n",
    "# 准备特征和目标变量\n",
    "X = df.drop(columns=['exam_score', 'student_id'])  # 移除无关列\n",
    "y = df['exam_score']\n",
    "\n",
    "# 数据集划分\n",
    "X_train, X_test, y_train, y_test = train_test_split(\n",
    "    X, y, test_size=0.2, random_state=42\n",
    ")\n",
    "scaler = StandardScaler()\n",
    "X_train_scaled = scaler.fit_transform(X_train)\n",
    "X_test_scaled = scaler.transform(X_test)\n",
    "\n",
    "# 初始化模型\n",
    "models = {\n",
    "    'Random Forest': RandomForestRegressor(random_state=42),\n",
    "    'XGBoost': XGBRegressor(random_state=42),\n",
    "    'SVR': SVR(),\n",
    "    'KNN': KNeighborsRegressor(),\n",
    "    'Linear Regression': LinearRegression()\n",
    "}\n",
    "\n",
    "# 模型比较（使用交叉验证）\n",
    "results = {}\n",
    "for name, model in models.items():\n",
    "    cv_scores = cross_val_score(model, X_train, y_train, \n",
    "                               cv=5, scoring='r2')\n",
    "    results[name] = cv_scores.mean()\n",
    "    print(f\"{name} 交叉验证R²: {cv_scores.mean():.4f} (±{cv_scores.std():.4f})\")\n",
    "\n",
    "# 随机森林参数优化\n",
    "param_grid = {\n",
    "    'n_estimators': [100, 200, 300],\n",
    "    'max_depth': [None, 10, 20],\n",
    "    'min_samples_split': [2, 5],\n",
    "    'min_samples_leaf': [1, 2]\n",
    "}\n",
    "\n",
    "rf_grid = GridSearchCV(RandomForestRegressor(random_state=42),\n",
    "                      param_grid, cv=5, scoring='r2', n_jobs=-1)\n",
    "rf_grid.fit(X_train, y_train)\n",
    "\n",
    "print(\"\\n最佳参数:\", rf_grid.best_params_)\n",
    "print(\"最佳模型R²:\", rf_grid.best_score_)\n",
    "\n",
    "# 使用最优模型评估测试集\n",
    "best_rf = rf_grid.best_estimator_\n",
    "y_pred = best_rf.predict(X_test)\n",
    "\n",
    "rf_test_score = r2_score(y_test, y_pred)\n",
    "rf_mse = mean_squared_error(y_test, y_pred)\n",
    "print(f\"\\n测试集性能: R²={rf_test_score:.4f}, MSE={rf_mse:.4f}\")\n",
    "\n",
    "# 特征重要性分析\n",
    "feature_importances = best_rf.feature_importances_\n",
    "sorted_idx = feature_importances.argsort()[::-1]\n",
    "\n",
    "plt.figure(figsize=(12, 8))\n",
    "sns.barplot(x=feature_importances[sorted_idx][:15], \n",
    "            y=X.columns[sorted_idx][:15])\n",
    "plt.title('Top 15 特征重要性')\n",
    "plt.xlabel('重要性得分')\n",
    "plt.tight_layout()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "46e6eeaf",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "训练集大小: (64000, 34)\n",
      "测试集大小: (16000, 34)\n"
     ]
    }
   ],
   "source": [
    "# 准备特征和目标变量\n",
    "X = df.drop(['student_id','age','gender', 'exam_score', 'previous_gpa'], axis=1)\n",
    "y = df['exam_score']\n",
    "\n",
    "# 重新划分数据集\n",
    "X_train, X_test, y_train, y_test = train_test_split(\n",
    "    X, y, test_size=0.2, random_state=42)\n",
    "\n",
    "print(f\"训练集大小: {X_train.shape}\")\n",
    "print(f\"测试集大小: {X_test.shape}\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "33a01c7f",
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "基准模型性能比较:\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Model</th>\n",
       "      <th>RMSE</th>\n",
       "      <th>MAE</th>\n",
       "      <th>R2</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Linear Regression</td>\n",
       "      <td>10.527853</td>\n",
       "      <td>8.662859</td>\n",
       "      <td>0.169129</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Decision Tree</td>\n",
       "      <td>14.773710</td>\n",
       "      <td>11.155000</td>\n",
       "      <td>-0.636188</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>XGBoost</td>\n",
       "      <td>10.578247</td>\n",
       "      <td>8.589152</td>\n",
       "      <td>0.161156</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Random Forest</td>\n",
       "      <td>10.520536</td>\n",
       "      <td>8.659548</td>\n",
       "      <td>0.170283</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "               Model       RMSE        MAE        R2\n",
       "0  Linear Regression  10.527853   8.662859  0.169129\n",
       "1      Decision Tree  14.773710  11.155000 -0.636188\n",
       "2            XGBoost  10.578247   8.589152  0.161156\n",
       "3      Random Forest  10.520536   8.659548  0.170283"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# 定义基准模型\n",
    "models = {\n",
    "    'Linear Regression': LinearRegression(),\n",
    "    'Decision Tree': DecisionTreeRegressor(random_state=42),\n",
    "    'XGBoost': XGBRegressor(random_state=42),\n",
    "    'Random Forest': RandomForestRegressor(random_state=42)\n",
    "}\n",
    "\n",
    "# 训练和评估基准模型\n",
    "results = []\n",
    "for name, model in models.items():\n",
    "    model.fit(X_train, y_train)\n",
    "    y_pred = model.predict(X_test)\n",
    "    \n",
    "    # 计算评估指标\n",
    "    rmse = np.sqrt(mean_squared_error(y_test, y_pred))\n",
    "    mae = mean_absolute_error(y_test, y_pred)\n",
    "    r2 = r2_score(y_test, y_pred)\n",
    "    \n",
    "    results.append({\n",
    "        'Model': name,\n",
    "        'RMSE': rmse,\n",
    "        'MAE': mae,\n",
    "        'R2': r2\n",
    "    })\n",
    "\n",
    "# 展示基准模型结果\n",
    "baseline_results = pd.DataFrame(results)\n",
    "print(\"\\n基准模型性能比较:\")\n",
    "display(baseline_results)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "f84c5a48",
   "metadata": {},
   "outputs": [],
   "source": [
    "# 导入所需库\n",
    "from sklearn.model_selection import train_test_split, cross_val_score, GridSearchCV\n",
    "from sklearn.ensemble import RandomForestRegressor\n",
    "from sklearn.linear_model import LinearRegression\n",
    "from sklearn.svm import SVR\n",
    "from sklearn.neighbors import KNeighborsRegressor\n",
    "from xgboost import XGBRegressor\n",
    "from sklearn.metrics import mean_squared_error, r2_score\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "import numpy as np\n",
    "\n",
    "# 准备特征和目标变量\n",
    "X = df.drop(columns=['exam_score', 'student_id'])  # 移除无关列\n",
    "y = df['exam_score']\n",
    "\n",
    "# 数据集划分\n",
    "X_train, X_test, y_train, y_test = train_test_split(\n",
    "    X, y, test_size=0.2, random_state=42\n",
    ")\n",
    "\n",
    "# 初始化模型\n",
    "models = {\n",
    "    'Random Forest': RandomForestRegressor(random_state=42),\n",
    "    'XGBoost': XGBRegressor(random_state=42),\n",
    "    'SVR': SVR(),\n",
    "    'KNN': KNeighborsRegressor(),\n",
    "    'Linear Regression': LinearRegression()\n",
    "}\n",
    "\n",
    "# 模型比较（使用交叉验证）\n",
    "results = {}\n",
    "for name, model in models.items():\n",
    "    cv_scores = cross_val_score(model, X_train, y_train, \n",
    "                               cv=5, scoring='r2')\n",
    "    results[name] = cv_scores.mean()\n",
    "    print(f\"{name} 交叉验证R²: {cv_scores.mean():.4f} (±{cv_scores.std():.4f})\")\n",
    "\n",
    "# 随机森林参数优化\n",
    "param_grid = {\n",
    "    'n_estimators': [100, 200, 300],\n",
    "    'max_depth': [None, 10, 20],\n",
    "    'min_samples_split': [2, 5],\n",
    "    'min_samples_leaf': [1, 2]\n",
    "}\n",
    "\n",
    "rf_grid = GridSearchCV(RandomForestRegressor(random_state=42),\n",
    "                      param_grid, cv=5, scoring='r2', n_jobs=-1)\n",
    "rf_grid.fit(X_train, y_train)\n",
    "\n",
    "print(\"\\n最佳参数:\", rf_grid.best_params_)\n",
    "print(\"最佳模型R²:\", rf_grid.best_score_)\n",
    "\n",
    "# 使用最优模型评估测试集\n",
    "best_rf = rf_grid.best_estimator_\n",
    "y_pred = best_rf.predict(X_test)\n",
    "\n",
    "rf_test_score = r2_score(y_test, y_pred)\n",
    "rf_mse = mean_squared_error(y_test, y_pred)\n",
    "print(f\"\\n测试集性能: R²={rf_test_score:.4f}, MSE={rf_mse:.4f}\")\n",
    "\n",
    "# 特征重要性分析\n",
    "feature_importances = best_rf.feature_importances_\n",
    "sorted_idx = feature_importances.argsort()[::-1]\n",
    "\n",
    "plt.figure(figsize=(12, 8))\n",
    "sns.barplot(x=feature_importances[sorted_idx][:15], \n",
    "            y=X.columns[sorted_idx][:15])\n",
    "plt.title('Top 15 特征重要性')\n",
    "plt.xlabel('重要性得分')\n",
    "plt.tight_layout()\n",
    "plt.show()"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
